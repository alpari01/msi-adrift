from datetime import datetime, timedelta
from opendrift.readers import reader_netCDF_CF_generic
from opendrift.readers import reader_ROMS_native
from opendrift.models.openoil import OpenOil
import dateutil.parser

print('setting up openoil model...')

filename = '{{nc_output_path}}'

longitude = {{longitude}}
latitude = {{latitude}}

N = {{number_of_particles}}

start_time = datetime({{start_time_datetime}})
end_time = datetime({{end_time_datetime}})

R = {{radius}}

model = OpenOil(loglevel=20, weathering_model='noaa')

model.set_config('general:use_auto_landmask', False)

model.set_config('processes:dispersion', True)
model.set_config('processes:evaporation',  True)
model.set_config('processes:emulsification',  True)
model.set_config('processes:biodegradation', True)
model.set_config('biodegradation:method', 'half_time')

model.set_config('drift:current_uncertainty', .1)
model.set_config('drift:wind_uncertainty', 1)
model.set_config('drift:vertical_mixing',  True)

print('fetching {{opendap_url}}')
phys = reader_ROMS_native.Reader('{{opendap_url}}')
print('fetching {{wind_url}}')
wind = reader_netCDF_CF_generic.Reader('{{wind_url}}')

model.add_reader([phys,wind])

object_type = "{{object_type_key}}"

print(f"Seeding model with: lon={longitude}, lat={latitude}, z=0, number={N}, radius={R}, oil_type={object_type}")
model.seed_elements(lon=longitude,
                    lat=latitude,
                    z=0,
                    number=N,
                    radius=R,
                    radius_type="uniform",
                    time=datetime.now(),
                    biodegradation_half_time_slick=3,
                    biodegradation_half_time_droplet=1,
                    oil_type="GENERIC MEDIUM CRUDE",
                    m3_per_hour=.5,
                    diameter=1e-5
                )

print('starting model run')
model.run(end_time=end_time,
        time_step=timedelta(minutes=10),
        time_step_output=timedelta(minutes=10),
        outfile=filename,
        export_variables=["trajectory",
                            "time",
                            "status",
                            "age_seconds",
                            "lon",
                            "lat",
                            "z",
                            "mass_oil",
                            "density"
                        ]
        )

print('plotting results')
model.o.plot_oil_budget(show_watercontent_and_viscosity=False, show_wind_and_current=False)

print('finished model run')